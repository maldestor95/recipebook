{"version":3,"sources":["webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["name","data","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","this","$refs","index","getMaxZIndex","parseInt","methods","exclude","base","zis","activeElements","document","Math","props","root","Boolean","isDark","render","$slots","default","node","baseMixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","key","genActivator","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","type","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","functional","directives","ripple","value","indeterminate","indeterminateIcon","onIcon","offIcon","children","h","staticClass","center","icon","dark","light","classes","class","click","f","mixins","provide","isInMenu","theme","ClickOutside","Resize","auto","closeOnClick","closeOnContentClick","disableKeys","maxHeight","Number","offsetX","offsetY","openOnClick","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","dimensions","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","width","pageWidth","isNaN","calculatedTop","top","calcYOverflow","hasClickableTiles","find","tile","styles","maxWidth","left","transformOrigin","zIndex","isContentActive","next","prev","classList","remove","created","$attrs","hasOwnProperty","activate","requestAnimationFrame","calcScrollPosition","$el","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","closeConditional","contains","genTransition","$createElement","genDirectives","args","include","genContent","options","menuable__content__active","style","ref","keydown","onKeyDown","showLazyContent","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","setTimeout","onResize","clearTimeout","arg","VThemeProvider","inset","vertical","orientation","themeClasses","$listeners","action","dense","hideSelected","items","itemDisabled","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","setTextColor","staticNoDataTile","undefined","mousedown","VListItem","genTileContent","genAction","VListItemAction","VSimpleCheckbox","color","inputValue","input","genDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","VSubheader","genLabelledBy","genTile","hasItem","getDisabled","activeClass","$scopedSlots","parent","scopedSlot","needsTile","innerHTML","getText","VList","id","domProps","indexOf","getValue","slot","itemsLength","tabindex","valueComparator","defaultMenuProps","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","isBooted","isMenuActive","lastItem","lazyValue","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","isFocused","dynamicHeight","hasChips","hasSlot","isDirty","listData","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","internalValue","immediate","handler","menu","blur","activateMenu","clearableCallback","uniqueValues","arr","findExistingIndex","i","genChipSelection","isDisabled","VChip","close","small","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genInput","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","genSelections","genSelection","genSlotSelection","selection","selected","readonly","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","onKeyPress","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","onScroll","showMoreItems","scrollHeight","scrollTop","setMenuIndex","setSelectedItems","values","v","oldValue","appendInner","returnValue","originalValue","save","allowOverflow","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","positionX","positionY","absoluteX","absoluteY","activatedBy","activatorFixed","bottom","right","offsetTop","offsetLeft","hasWindow","inputActivator","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","hasActivator","absolutePosition","calcTop","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","sneakPeek","cb","startTransition","Promise","resolve","updateDimensions"],"mappings":"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","file":"js/Users~dev~fournisseur~recettes~scoreBoard.6cfa558c.js","sourcesContent":["import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent: 'initDetach',\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      if (!this.transition) return this.genContent()\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [this.genContent()])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement(\n        'div',\n        options,\n        this.showLazyContent(this.getContentSlot())\n      )\n    },\n    getTiles () {\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.$createElement(VThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [this.genTransition()]),\n    ])\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport '../VCard/VCard.sass'\n\n// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue'\nimport { SelectItemKey } from 'types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    genLabelledBy (item: object) {\n      return `list-item-${this._uid}`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': `${this.genLabelledBy(item)}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          attrs: { id: `${this.genLabelledBy(item)}-${index}` },\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses,\n    }, [\n      this.$createElement(VList, {\n        attrs: {\n          id: this.$attrs.id,\n          role: 'listbox',\n          tabindex: -1,\n        },\n        props: { dense: this.dense },\n      }, children),\n    ])\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType } from 'vue'\nimport { SelectItemKey } from 'types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null as any,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isBooted () {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      this.$nextTick(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.isBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  mounted () {\n    this.content = this.$refs.menu && (this.$refs.menu as { [key: string]: any }).$refs.content\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        this.content &&\n        !this.content.contains(e.target) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.domProps!.value = null\n      input.data!.attrs!.readonly = true\n      input.data!.attrs!.type = 'text'\n      input.data!.attrs!['aria-readonly'] = true\n      input.data!.attrs!.autocomplete = input.data!.attrs!.autocomplete || 'off'\n      input.data!.on!.keypress = this.onKeyPress\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (this.isDisabled) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        !this.isDisabled\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.content.scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.content.scrollHeight -\n          (this.content.scrollTop +\n          this.content.clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.getTiles()\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n      menu.activeTile && menu.activeTile.click()\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {}\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        dimensions.content = this.measure(this.$refs.content)\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}